version: '3.8'

services:
  # 1. The PostgreSQL Database
  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-polldb}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-polldb}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # 2. The Redis Server
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # 3. The Main API Server
  app:
    build: .
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-polldb}"
      REDIS_URL: "redis://redis:6379"
      JWT_SECRET: ${JWT_SECRET} # from .env file
      PORT: "4000"
    command: "sh -c 'npx prisma migrate deploy && node dist/server.js'"

  # 4. The Background Vote Worker
  worker:
    build: .
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-polldb}"
      REDIS_URL: "redis://redis:6379"
      JWT_SECRET: ${JWT_SECRET}
    command: "node dist/worker.js"

volumes:
  pgdata: